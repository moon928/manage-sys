<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.team.mapper.StudentMapper">

	<resultMap type="cn.team.bean.Student" id="StudentMap">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="class_id" property="classId"/>
		<result column="create_time" property="createTime"/>
		<result column="degree_id" property="degreeId"/>
		
		<association property="cla" javaType="cn.team.bean.Cla">
			<id column="cla_id" property="id"/>
			<result column="claname" property="name"/>
		</association>
		
		<association property="professional" javaType="cn.team.bean.Professional">
			<id column="pro_id" property="id"/>
			<result column="proname" property="name"/>				
		</association>
		<association property="dept" javaType="cn.team.bean.Dept">
			<id column="dept_id" property="id"/>
			<result column="deptname" property="name"/>
		</association>
		<association property="degree" javaType="cn.team.bean.Degree">
			<id column="degreeid" property="id"/>
			<result column="degreename" property="name"/>
		</association>
	</resultMap>

	<select id="findAllClass" resultType="cn.team.bean.Cla">
		select * from cla
	</select>
	<select id="findAllProfession" resultSets="cn.team.bean.Professional">
		select * from proffesionals
	</select>
	<select id="findAllDept" resultType="cn.team.bean.Dept">
		select * from depts
	</select>
	<select id="findAllStudent" resultMap="StudentMap">
		select students.*,cla.id as cla_id,cla.name as claname,professionals.id as pro_id,professionals.name as proname,depts.id as dept_id,depts.name as deptname,degree.id as degreeid,degree.name as degreename from students,cla,professionals,depts,degree
		where
		students.class_id=cla.id and
		cla.parent_id	=	professionals.id and
		professionals.parent_id=depts.id and
		students.degree_id = degree.id
	</select>

	<insert id="addStudent">
		insert into students(name,username,password,class_id,degree_id,create_time)
		value(#{name},#{username},#{password},#{classId},#{degreeId},#{createTime})
	</insert>
	
	<update id="updateStudent">
		
        update students
        <set>
            <if test="stu.name != null">
                name = #{stu.name,jdbcType=VARCHAR},
            </if>
            <if test="stu.username != null">
                username = #{stu.username,jdbcType=VARCHAR},
            </if>
            <if test="stu.password != null">
                password = #{stu.password,jdbcType=VARCHAR},
            </if>
            <if test="stu.createTime != null">
                create_time = #{stu.createTime,jdbcType=DATE},
            </if>
            <if test="stu.classId != null">
                class_id = #{stu.classId,jdbcType=INTEGER},
            </if>
            <if test="stu.degreeId != null">
                degree_id = #{stu.degreeId,jdbcType=INTEGER},
            </if>
        </set>
        where students.id = #{stu.id,jdbcType=BIGINT}
	</update>
	
	<select id="findStudentById" resultType="cn.team.bean.Student">
		select * from students
		where students.id=#{id}
	</select>
	
	<select id="findStudentByName" resultMap="StudentMap">
		select students.*,cla.id as cla_id,cla.name as claname,professionals.id as pro_id,professionals.name as proname,depts.id as dept_id,depts.name as deptname,degree.id as degreeId,degree.name as degreename from students,cla,professionals,depts,degree
		where
		students.class_id=cla.id and
		cla.parent_id=professionals.id and
		professionals.parent_id=depts.id and
		students.degree_id = degree.id and
		students.name LIKE '%${name}%'
	</select>
	
	<delete id="deleteStudentById">
		delete from students where students.id=#{id}
	</delete>
</mapper>